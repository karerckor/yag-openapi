{
  "openapi": "3.0.0",
  "paths": {
    "/tasks": {
      "post": {
        "operationId": "TasksController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDto"
                }
              }
            }
          }
        },
        "summary": "Create a new task",
        "tags": [
          "Tasks"
        ]
      },
      "get": {
        "operationId": "TasksController_getAll",
        "parameters": [
          {
            "name": "skip",
            "required": false,
            "in": "query",
            "description": "Number of records to skip",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "description": "Number of records to take",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "title",
            "required": false,
            "in": "query",
            "description": "Filter by title (contains)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderByDate",
            "required": false,
            "in": "query",
            "description": "Order by createdAt",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskDto"
                  }
                }
              }
            }
          }
        },
        "summary": "Get all tasks with optional filters",
        "tags": [
          "Tasks"
        ]
      }
    },
    "/tasks/{id}": {
      "get": {
        "operationId": "TasksController_getOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDto"
                }
              }
            }
          }
        },
        "summary": "Get a task by id",
        "tags": [
          "Tasks"
        ]
      },
      "patch": {
        "operationId": "TasksController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTaskDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDto"
                }
              }
            }
          }
        },
        "summary": "Update a task by id",
        "tags": [
          "Tasks"
        ]
      },
      "delete": {
        "operationId": "TasksController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task deleted"
          }
        },
        "summary": "Delete a task by id",
        "tags": [
          "Tasks"
        ]
      }
    },
    "/categories": {
      "post": {
        "operationId": "CategoriesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDto"
                }
              }
            }
          }
        },
        "summary": "Create a new category",
        "tags": [
          "Categories"
        ]
      },
      "get": {
        "operationId": "CategoriesController_getAll",
        "parameters": [
          {
            "name": "skip",
            "required": false,
            "in": "query",
            "description": "Number of records to skip",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "description": "Number of records to take",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "description": "Filter by name (contains)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderById",
            "required": false,
            "in": "query",
            "description": "Order by id",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CategoryDto"
                  }
                }
              }
            }
          }
        },
        "summary": "Get all categories with optional filters",
        "tags": [
          "Categories"
        ]
      }
    },
    "/categories/{id}": {
      "get": {
        "operationId": "CategoriesController_getOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDto"
                }
              }
            }
          }
        },
        "summary": "Get a category by id",
        "tags": [
          "Categories"
        ]
      },
      "patch": {
        "operationId": "CategoriesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryDto"
                }
              }
            }
          }
        },
        "summary": "Update a category by id",
        "tags": [
          "Categories"
        ]
      },
      "delete": {
        "operationId": "CategoriesController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category deleted"
          }
        },
        "summary": "Delete a category by id",
        "tags": [
          "Categories"
        ]
      }
    },
    "/columns": {
      "post": {
        "operationId": "ColumnsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateColumnDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColumnDto"
                }
              }
            }
          }
        },
        "summary": "Create a new column",
        "tags": [
          "Columns"
        ]
      },
      "get": {
        "operationId": "ColumnsController_getAll",
        "parameters": [
          {
            "name": "skip",
            "required": false,
            "in": "query",
            "description": "Number of records to skip",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "description": "Number of records to take",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "description": "Filter by name (contains)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderById",
            "required": false,
            "in": "query",
            "description": "Order by id",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ColumnDto"
                  }
                }
              }
            }
          }
        },
        "summary": "Get all columns with optional filters",
        "tags": [
          "Columns"
        ]
      }
    },
    "/columns/{id}": {
      "get": {
        "operationId": "ColumnsController_getOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColumnDto"
                }
              }
            }
          }
        },
        "summary": "Get a column by id",
        "tags": [
          "Columns"
        ]
      },
      "patch": {
        "operationId": "ColumnsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateColumnDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ColumnDto"
                }
              }
            }
          }
        },
        "summary": "Update a column by id",
        "tags": [
          "Columns"
        ]
      },
      "delete": {
        "operationId": "ColumnsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Column deleted"
          }
        },
        "summary": "Delete a column by id",
        "tags": [
          "Columns"
        ]
      }
    }
  },
  "info": {
    "title": "Example app",
    "description": "The example API description",
    "version": "1.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "example",
      "description": ""
    }
  ],
  "servers": [],
  "components": {
    "schemas": {
      "CreateTaskDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "completed": {
            "type": "boolean",
            "default": false
          },
          "categoryId": {
            "type": "number"
          },
          "columnId": {
            "type": "number"
          }
        },
        "required": [
          "title"
        ]
      },
      "TaskDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "completed": {
            "type": "boolean"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          },
          "categoryId": {
            "type": "number"
          },
          "columnId": {
            "type": "number"
          }
        },
        "required": [
          "id",
          "title",
          "completed",
          "createdAt",
          "updatedAt"
        ]
      },
      "UpdateTaskDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "completed": {
            "type": "boolean",
            "default": false
          },
          "categoryId": {
            "type": "number"
          },
          "columnId": {
            "type": "number"
          }
        }
      },
      "CreateCategoryDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "CategoryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "UpdateCategoryDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "CreateColumnDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "ColumnDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "UpdateColumnDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      }
    }
  }
}